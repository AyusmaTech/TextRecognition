package com.ayusma.twitterpostscheduler;

import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.view.GravityCompat;
import androidx.drawerlayout.widget.DrawerLayout;

import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import com.ayusma.twitterpostscheduler.Helper.SharedHelper;
import com.google.android.material.navigation.NavigationView;
import com.squareup.picasso.Picasso;
import com.twitter.sdk.android.core.Callback;
import com.twitter.sdk.android.core.Result;
import com.twitter.sdk.android.core.Twitter;
import com.twitter.sdk.android.core.TwitterAuthToken;
import com.twitter.sdk.android.core.TwitterCore;
import com.twitter.sdk.android.core.TwitterSession;
import com.twitter.sdk.android.core.models.User;


import twitter4j.PagableResponseList;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.conf.ConfigurationBuilder;


public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {

    TextView username, follower, following;
    ImageView profileBanner;
    ConfigurationBuilder cb;
    TwitterSession session;
    TwitterFactory tf;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Twitter.initialize(this);
        setContentView(R.layout.activity_main);
        androidx.appcompat.widget.Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);


        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        session = TwitterCore.getInstance().getSessionManager().getActiveSession();
        TwitterAuthToken authToken = session.getAuthToken();
        String token = authToken.token;
        String secret = authToken.secret;


        cb = new ConfigurationBuilder();
        cb.setDebugEnabled(true)
                .setOAuthConsumerKey("664M8Khyq7hhbfDreVd8QnKLv")
                .setOAuthConsumerSecret("ys0SFju4sW1AUeu9FKM29HhD7e5yupLykqazM0AU4htaBOqwvv")
                .setOAuthAccessToken(token)
                .setOAuthAccessTokenSecret(secret);
        tf = new TwitterFactory(cb.build());

        View headerView = navigationView.getHeaderView(0);
        username = headerView.findViewById(R.id.username);
        follower = headerView.findViewById(R.id.followers_count);
        following = headerView.findViewById(R.id.following_count);
        profileBanner = headerView.findViewById(R.id.profileImageView);


        username.setText(session.getUserName());
        follower.setText(SharedHelper.getKey(MainActivity.this, "followerSize"));
        following.setText(SharedHelper.getKey(MainActivity.this, "followingSize"));

        GetFollowers getFollowers = new GetFollowers();
        getFollowers.execute();
        GetFollowing getFollowing = new GetFollowing();
        getFollowing.execute();

       loadTwitterAPI(session.getUserId());

    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_schedule_post) {
            startActivity(new Intent(new Intent(MainActivity.this, ComposeTweetActivity.class)));

            overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);
            // Handle the camera action
        } else if (id == R.id.nav_schedule_direct_messages) {

            // overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);


        } else if (id == R.id.nav_coming) {

        } else if (id == R.id.nav_logout) {

            //Intent intent = new Intent(AdminActivity.this, LoginActivity.class);
            //startActivity(intent);
            //finish();

            //overridePendingTransition(R.anim.push_left_in, R.anim.push_left_out);

        }

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }

    private class GetFollowing extends AsyncTask<String, Void, String> {
        int followingSize = 0;

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            //  progressDialog.setMessage("Loading");
            // progressDialog.setIndeterminate(true);
            // progressDialog.setCanceledOnTouchOutside(false);
            // progressDialog.show();
        }

        @Override
        protected String doInBackground(String... strings) {


            PagableResponseList<twitter4j.User> initialAmount;


            twitter4j.Twitter twitter = tf.getInstance();
            try {
                initialAmount = twitter.friendsFollowers().getFriendsList(session.getUserName(), -1, 200);
                followingSize = followingSize + initialAmount.size();
                while (initialAmount.hasNext()) {
                    long next = initialAmount.getNextCursor();
                    initialAmount = twitter.friendsFollow